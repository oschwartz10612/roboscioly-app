<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Admin</title>
  <% include ../partials/head %>
  <style>
  .cell {
    max-width: 300px; /* tweak me please */
    white-space : nowrap;
    overflow : hidden;
  }
  </style>
  <link href="/css/tabulator.min.css" rel="stylesheet">
  <script type="text/javascript" src="/js/tabulator.min.js"></script>

</head>

<body>
  <% include ../partials/navbar %>

  <div class="container">
    <div class="alert alert-success collapse" role="alert" id="sucsess">
        Successfully saved data!
</div>

    <div class="alert alert-danger collapse" role="alert" id="error">
        There was an error!
    </div>

    <ul class="nav nav-tabs" id="myTab" role="tablist">
      <li class="nav-item">
        <a class="nav-link active" id="team-tab" data-toggle="tab" href="#team" role="tab" aria-controls="team" aria-selected="true"">Team</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="officer-tab" data-toggle="tab" href="#officer" role="tab" aria-controls="officer" aria-selected="false" onclick="fixTable()"">Officers</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="teachers-tab" data-toggle="tab" href="#teachers" role="tab" aria-controls="teachers" aria-selected="false" onclick="fixTable()"">Teachers</a>
      </li>
      <li class="nav-item">
        <a class="nav-link" id="settings-tab" data-toggle="tab" href="#settings" role="tab" aria-controls="settings" aria-selected="false">Settings</a>
      </li>
    </ul>
    <div class="tab-content" id="myTabContent">


      <div class="tab-pane show active" id="team" role="tabpanel" aria-labelledby="team-tab">
        <div class="card mt-3">
          <div class="card-body">
            <h4 class="card-title">Team Apps Submmissions</h4>
            <form class="form-inline mb-4">
              <div class="form-group">
                <label for="filter-field">Column: </label>
                <select type="dropdown" name="field" id="filter-field" class="form-control ml-2" placeholder=""></select>
              </div>
              <div class="form-group ml-3">
                <label for="filter-type">Filter:</label>
                <select type="dropdown" name="filter-type" id="filter-type" class="form-control ml-2" placeholder="">
                  <option value="=">=</option>
                  <option value="<"><</option>
                  <option value="<="><=</option>
                  <option value=">">></option>
                  <option value=">=">>=</option>
                  <option value="!=">!=</option>
                  <option value="like">like</option>
                </select>
              </div>
              <div class="form-group ml-3">
                <label for="filter-value">Filter Value:</label>
                <input type="text" name="filter-value" id="filter-value" class="form-control ml-2" placeholder="">
              </div>
              <button class="btn btn-primary" id="filter-clear">Clear</button>
            </form>
    
            <div id="team-table"></div>
            <div id="team-table-textarea"></div>
    
            <button id="download-csv" class="btn btn-primary mt-4">Download CSV</button>
            <button id="show-text" class="btn btn-secondary mt-4">Show text</button>
            <button class="btn btn-warning mt-4" id="selectAll">Select all rows</button>
            <button class="btn btn-danger mt-4" onclick="deleteAppRows()">Delete Selected Rows</button>
          </div>
        </div>
      </div>


      <div class="tab-pane" id="officer" role="tabpanel" aria-labelledby="officer-tab">
        <div class="card mt-3">
          <div class="card-body">
            <h4 class="card-title">Officer App Submmissions</h4>
            <div id="officer-table"></div>
            <button id="download-csv-officers" class="btn btn-primary mt-4">Download CSV</button>
            <button class="btn btn-warning mt-4" id="selectAllOfficers">Select all rows</button>
            <button class="btn btn-danger mt-4" onclick="deleteOfficerRows()">Delete Selected Rows</button>  
          </div>
        </div>
      </div>


      <div class="tab-pane" id="teachers" role="tabpanel" aria-labelledby="teachers-tab">
        <div class="card mt-3">
          <div class="card-body">
            <h4 class="card-title">Teacher Information</h4>
            <button class="btn btn-success mb-4" id="add-row">Add Teacher</button>
            <div id="teacher-table"></div>
            <button class="btn btn-warning mt-4" id="selectAllTeachers">Select all rows</button>
            <button class="btn btn-danger mt-4" onclick="deleteTeacherRows()">Delete Selected Rows</button>
          </div>
        </div>
      </div>


      <div class="tab-pane" id="settings" role="tabpanel" aria-labelledby="settings-tab">
        <div class="card mt-3">
          <div class="card-body">
            <h4 class="card-title">Settings</h4>
            <div class="row">
              <div class="col col-4">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">Instructions</h4>
        
                    <p>Application State:</p>
                    <input type="button" value="Close All Applications" class="btn btn-danger" onClick="closeApp()"> 
                    <input type="button" value="Open All Applications" class="btn btn-success mt-3" onClick="openApp()">
                
                    <hr>
                
                    <p>Main App:</p>
                    <% if(mainAppView == 'no') { %> <input type="button" value="Close and Hide Main App" class="btn btn-danger" onClick="closeMain()">
                    <% } else { %> <input type="button" value="Open and Show Main App" class="btn btn-success" onClick="openMain()"> <% } %> 
                
                    <hr>
                
                    <p>Officer App:</p>
                    <% if(officerAppView == 'no') { %> <input type="button" value="Close and Hide Officer App" class="btn btn-danger" onClick="closeOfficer()">
                    <% } else { %> <input type="button" value="Open and Show Officer App" class="btn btn-success" onClick="openOfficer()"> <% } %> 
                
                    <hr>
                
                    <p>Collect email on index page:</p>
                    <input type="button" value="Close Collect Email Dialog" class="btn btn-danger" onClick="closeCollectEmail()">
                    <input type="button" value="Open Collect Email Dialog" class="btn btn-success mt-3" onClick="openCollectEmail()">

                    <hr>

                    <p>Collected emails:</p>
                    
                    
        
                  </div>
                </div>
              </div>
              <div class="col col-8">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">Application State</h4>
                    <form action="/admin/api/instructions" method="post" id="instructionsForm">
                      <div class="form-group">
                        <label for="textarea2">Main Application Instructions</label>
                        <textarea id="mainAppView" name="mainAppView" spellcheck="true" cols="40" rows="5"
                          class="form-control"><%= typeof data!='undefined' ? data[2].text : '' %></textarea>
                      </div>
                      <div class="form-group">
                        <label for="textarea2">Officer Application Instructions</label>
                        <textarea id="officerAppView" name="officerAppView" spellcheck="true" cols="40" rows="5"
                          class="form-control"><%= typeof data!='undefined' ? data[3].text : '' %></textarea>
                      </div>
                      <div class="form-group">
                        <label for="textarea2">Recommendations Instructions</label>
                        <textarea id="recInstructions" name="recInstructions" spellcheck="true" cols="40" rows="5"
                          class="form-control"><%= typeof data!='undefined' ? data[4].text : '' %></textarea>
                      </div>
                      <button name="submit" type="submit" class="btn btn-success mb-5 mt-1" id="submit">Save</button>
                    </form>
                
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

      </div>

    </div>

    <footer class="mt-3">
      <hr>
      <p>&copy; Robinson Science Olympiad 2019-2020</p>
    </footer>
</body>
</html>

<script>

  var team_table;
  var officer_table;
  var teacher_table;

  function closeApp() {
    $.get( "/admin/api/closeApp", function( data ) {
      if (data == 'done') {
        location.reload();
      }
    });
  }

  function openApp() {
    $.get( "/admin/api/openApp", function( data ) {
      if (data == 'done') {
        location.reload();
      }
    });
  }

  function closeMain() {
    $.get( "/admin/api/closeMain", function( data ) {
      if (data == 'done') {
        location.reload();
      }
    });
  }

  function openMain() {
    $.get( "/admin/api/openMain", function( data ) {
      if (data == 'done') {
        location.reload();
      }
    });
  }

  function closeOfficer() {
    $.get( "/admin/api/closeOfficer", function( data ) {
      if (data == 'done') {
        location.reload();
      }
    });
  }

  function openOfficer() {
    $.get( "/admin/api/openOfficer", function( data ) {
      if (data == 'done') {
        location.reload();
      }
    });
  }

    function closeCollectEmail() {
    $.get( "/admin/api/closeCollectEmail", function( data ) {
      if (data == 'done') {
        $('#sucsess').show();
           $(".alert").delay(4000).slideUp(200, function() {
              $(this).hide();
        });
      }
    });
  }

  function openCollectEmail() {
    $.get( "/admin/api/openCollectEmail", function( data ) {
      if (data == 'done') {
        $('#sucsess').show();
           $(".alert").delay(4000).slideUp(200, function() {
              $(this).hide();
        });
      }
    });
  }

  let textareas = ["textarea","textarea1","textarea2","textarea3","textarea4","textarea5","textarea6","textarea7","textarea_rec"];
  $.ajax({
    url: "/admin/api/getcolumns",
    cache: false,
    success: function(result) {
      let rawColumns = [];
      let columns = [];
      for (let i = 0; i < result.length; i++) {
        const element = result[i];
        rawColumns.push(element.column_name);
      }
      for (let i = 0; i < rawColumns.length; i++) {
        const element = rawColumns[i];
        if (element.includes("textarea")) {
          columns.push({
            title: element,
            field: element,
            width: 200,
            editor:"textarea"
          });
        } else {
          if(element == 'user_id') {
            columns.push({
              title: element,
              field: element
            }); 
          } else {
            columns.push({
              title: element,
              field: element,
              editor:"input"
            }); 
          }
        }
      }
      buildTable(columns, rawColumns);
    }
  });
  
  var appDeleteData;
  var appDeleteRows;
  function buildTable(columns, rawColumns) {
    let dropdown = $('#filter-field');
    for (let i = 0; i < rawColumns.length; i++) {
      const element = rawColumns[i];
      dropdown.append($('<option></option>').val(element).html(element));
    }
    
    team_table = new Tabulator("#team-table", {
        ajaxURL:"/admin/api/alldata", 
        height:"800px",
        pagination:"local",
        layout:"fitDataFill",
        selectable:true,
        paginationSize:20,
        paginationSizeSelector:[20, 30, 40, 50],
        tooltips:true,
        columns: columns,
        cellEdited:function(cell){
         // This callback is called any time a cell is edited.

         $.ajax({
           url: "/admin/api/update_sql",
           data: cell.getRow().getData(),
           type: "post",
           success: function(response, textStatus, xhr){
            $('#sucsess').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
           },
           error: function(XMLHttpRequest, textStatus, error){
            $('#error').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
           }
         })

       },
      rowSelectionChanged:function(data, rows) {
        appDeleteData = data;
        appDeleteRows = rows;
      },
    });
    $("#selectAll").click(function() {
      table.selectRow();
    })

    $("#show-text").click(function(){
    let columns = [];
    let textareas = ["textarea","textarea1","textarea2","textarea3","textarea4","textarea5","textarea6","textarea7","textarea_rec"];
    for (let i = 0; i < rawColumns.length; i++) {
      const element = rawColumns[i];
      if (element.includes("textarea")) {
        columns.push({
          title: element,
          field: element,
          width: 500,
          formatter: "textarea"
        });
      } else {
        columns.push({
          title: element,
          field: element
        }); 
      }
    }
    $("#team-table").remove();
    var newTable = new Tabulator("#team-table-textarea", {
      ajaxURL:"/admin/api/alldata", 
      height:"1200px",
      pagination:"local",
      layout:"fitDataFill",
      paginationSize:20,
      paginationSizeSelector:[20, 30, 40, 50],
      columns: columns
    });
    $("#show-text").remove();
  });

  $("#download-csv").click(function(){
    table.download("csv", "data.csv");
  });

  //Update filters on value change
  $("#filter-field, #filter-type").change(updateFilter);
  $("#filter-value").keyup(updateFilter);

  //Clear filters on "Clear Filters" button click
  $("#filter-clear").click(function(){
      $("#filter-field").val("");
      $("#filter-type").val("=");
      $("#filter-value").val("");

      table.clearFilter();
  });
    //Trigger setFilter function with correct parameters
  function updateFilter() {

      var filter = $("#filter-field").val() == "function" ? customFilter : $("#filter-field").val();

      if($("#filter-field").val() == "function" ){
          $("#filter-type").prop("disabled", true);
          $("#filter-value").prop("disabled", true);
      }else{
          $("#filter-type").prop("disabled", false);
          $("#filter-value").prop("disabled", false);
      }

      table.setFilter(filter, $("#filter-type").val(), $("#filter-value").val());
      
  }
  }

  function deleteAppRows() {

    if (appDeleteData.length != 0) {

      var data = [];

      appDeleteData.forEach(row => {
        data.push(row.user_id)
      });

      $.ajax({
        url: "/admin/api/deleteTeam",
        data: {ids: data},
        type: "post",
        success: function(response, textStatus, xhr){
          $('#sucsess').show();
            $(".alert").delay(4000).slideUp(200, function() {
                $(this).hide();
          });
          appDeleteRows.forEach(row => {
            row.delete()
          })
          appDeleteData = [];
        },
        error: function(XMLHttpRequest, textStatus, error){
          $('#error').show();
            $(".alert").delay(4000).slideUp(200, function() {
                $(this).hide();
          });
        }
      })
    } else {
      alert('Please select some rows')
    }
  }

  var teacher_columns = [{title: "ID", field: "id"}, {title: "Email", field: "email", editor:"input"}, {title: "Name", field: "name", editor:"input"}, {title: "Department", field: "department", editor:"select", editorParams:{"science":"science", "math":"math"}}];
  var teacherDeleteRows;
  var teacherDeleteData;
  teacher_table = new Tabulator("#teacher-table", {
        ajaxURL:"/admin/api/teacher_data", 
        height:"800px",
        pagination:"local",
        layout:"fitDataFill",
        paginationSize:20,
        selectable:true,
        paginationSizeSelector:[20, 30, 40, 50],
        tooltips:true,
        columns: teacher_columns,
        cellEdited:function(cell){
         // This callback is called any time a cell is edited.
          
          $.ajax({
          url: "/admin/api/update_sql_teachers",
          data: cell.getRow().getData(),
          type: "post",
          success: function(response, textStatus, xhr){
            console.log(response);
            if (response.success == 'Added Successfully') {
              cell.getRow().update({'id': response.insertId})
            }
            
            $('#sucsess').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
          },
          error: function(XMLHttpRequest, textStatus, error){
            $('#error').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
          }
        })
         
       },
       rowSelectionChanged:function(data, rows) {
        teacherDeleteRows = rows;
        teacherDeleteData = data;
      }
    });
    $("#add-row").click(function(){
    teachers.addRow({id: "new"});
    });
    $("#selectAllTeachers").click(function() {
      teachers.selectRow();
    })

    function deleteTeacherRows() {

      if (teacherDeleteData.length != 0) {

        var data = [];

        teacherDeleteData.forEach(row => {
          data.push(row.id)
        });

        $.ajax({
           url: "/admin/api/deleteTeachers",
           data: {ids: data},
           type: "post",
           success: function(response, textStatus, xhr){
            $('#sucsess').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
            teacherDeleteRows.forEach(row => {
              row.delete()
            })
            teacherDeleteData = [];
           },
           error: function(XMLHttpRequest, textStatus, error){
            $('#error').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
           }
         })
      } else {
        alert('Please select some rows')
      } 
    }



  let officerTextareas = ["textarea","textarea1","textarea2","textarea3","textarea4"];
  var officerDeleteData;
  var officerDeleteRows;
  $.ajax({
    url: "/admin/api/getofficercolumns",
    cache: false,
    success: function(result) {
      let rawColumns = [];
      let columns = [];
      for (let i = 0; i < result.length; i++) {
        const element = result[i];
        rawColumns.push(element.column_name);
      }
      for (let i = 0; i < rawColumns.length; i++) {
        const element = rawColumns[i];
        if (element.includes("textarea")) {
          columns.push({
            title: element,
            field: element,
            width: 200,
            editor:"textarea"
          });
        } else {
          if(element == 'user_id') {
            columns.push({
              title: element,
              field: element
            }); 
          } else {
            columns.push({
              title: element,
              field: element,
              editor:"input"
            }); 
          }
        }
      }
      buildOfficerTable(columns, rawColumns);
    }
  });


  function buildOfficerTable(columns, rawColumns) {

    officer_table = new Tabulator("#officer-table", {
        ajaxURL:"/admin/api/allofficerdata", 
        height:"800px",
        pagination:"local",
        layout:"fitDataFill",
        selectable:true,
        paginationSize:20,
        paginationSizeSelector:[20, 30, 40, 50],
        tooltips:true,
        columns: columns,
        cellEdited:function(cell){
         // This callback is called any time a cell is edited.

         $.ajax({
           url: "/admin/api/update_officer_sql",
           data: cell.getRow().getData(),
           type: "post",
           success: function(response, textStatus, xhr){
            $('#sucsess').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
           },
           error: function(XMLHttpRequest, textStatus, error){
            $('#error').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
           }
         })

       },
      rowSelectionChanged:function(data, rows) {
        officerDeleteData = data;
        officerDeleteRows = rows;
      },
    });
    $("#selectAllOfficers").click(function() {
      table.selectRow();
    })
    $("#download-csv-officers").click(function(){
      table.download("csv", "data.csv");
    });
  }

  function deleteOfficerRows() {

    if (officerDeleteData.length != 0) {

      var data = [];

      officerDeleteData.forEach(row => {
        data.push(row.user_id)
      });

      $.ajax({
        url: "/admin/api/deleteOfficers",
        data: {ids: data},
        type: "post",
        success: function(response, textStatus, xhr){
          $('#sucsess').show();
            $(".alert").delay(4000).slideUp(200, function() {
                $(this).hide();
          });
          officerDeleteRows.forEach(row => {
            row.delete()
          })
          officerDeleteData = [];
        },
        error: function(XMLHttpRequest, textStatus, error){
          $('#error').show();
            $(".alert").delay(4000).slideUp(200, function() {
                $(this).hide();
          });
        }
      })
    } else {
      alert('Please select some rows')
    } 
  }

  $('#instructionsForm').submit(function(e){
    e.preventDefault();
    $.ajax({
        url:'/admin/api/instructions',
        type:'post',
        data:$('#instructionsForm').serialize(),
        success:function(response){
          console.log(response);
          
           $('#sucsess').show();
           $('html,body').scrollTop(0);
           $(".alert").delay(4000).slideUp(200, function() {
              $(this).hide();
          });
        },
        error: function(XMLHttpRequest, textStatus, error){
          console.log(error);
            $('#error').show();
              $(".alert").delay(4000).slideUp(200, function() {
                  $(this).hide();
            });
           }
    });
});

function fixTable() {
  setTimeout(() => {
    officer_table.redraw(true);
    teacher_table.redraw(true);
  }, 1)
}
</script>
